{
	"name": "auth",
	"version": "0.0.1",
	"description": "Meds Tracker Authentication",
	"author": "Gitau",
	"private": true,
	"license": "UNLICENSED",
	"directories": {
		"dist": "dist"
	},
	"scripts": {
		"prebuild": "rimraf dist",
		"build": "pnpm run build:base && pnpm run build:lambda",
		"build:cicd": "pnpm run build && pnpm run build:ncc",
		"build:base": "rimraf dist/nest && nest build",
		"build:watch": "nest build --watch",
		"build:lambda": "rimraf dist/lambda && tsc --project tsconfig.lambda.json",
		"build:webpack": "nest build --webpack",
		"build:ncc": "pnpm run build:ncc:nest && pnpm run build:ncc:lambda",
		"build:ncc:lambda": "cd dist/lambda && node script.js",
		"build:ncc:nest": "rimraf dist/ncc && ncc build dist/nest/serverless.js -s -m -o dist/ncc",
		"rollup:build": "rollup -c",
		"webpack:build": "rimraf webpack && pnpm run build && webpack --mode=production",
		"format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
		"prisma:generate": "pnpm remove @prisma/client && pnpm add @prisma/client",
		"s3:local": " minio server --address :5003 --console-address :6003 \"C:\\S3\"",
		"start": "nest start",
		"start:watch": "nest start --watch",
		"start:dev": "nest start --watch",
		"start:debug": "nest start --debug --watch",
		"start:prod": "cross-env NODE_ENV=production nest start",
		"start:local": "node dist/src/main",
		"start:serverless": "serverless offline",
		"lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
		"test": "jest",
		"test:watch": "jest --watch",
		"test:cov": "jest --coverage",
		"test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
		"test:e2e": "jest --config ./test/jest-e2e.json",
		"co:login": "dotenv -- pnpm run co:login:local ",
		"co:login:local": "awsudo -v --session-name %AWS_PROFILE% arn:aws:iam::%AWS_ACCOUNT%:role/CodeArtifactExternalAccessRole pnpm run co:login:cloud",
		"co:login:cloud": "aws codeartifact login --region eu-west-1 --tool npm --repository gylfie --domain gylfie --namespace @gylfie",
		"docker:build": "awsudo -v --session-name %AWS_PROFILE% arn:aws:iam::%AWS_ACCOUNT%:role/CodeArtifactExternalAccessRole pnpm run docker:build:cloud",
		"docker:build:cloud": "docker build --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY --build-arg AWS_SESSION_TOKEN --no-cache -t gylfie/api:dev . && pnpm run docker:tag",
		"docker:tag": "docker tag gylfie/api:dev gylfie/api:latest && docker tag gylfie/api:dev %AWS_ACCOUNT%.dkr.ecr.eu-west-1.amazonaws.com/gylfie/api:latest",
		"ecr:login": "awsudo -v --session-name %AWS_PROFILE% arn:aws:iam::%AWS_ACCOUNT%:role/ECRAccessRole pnpm run ecr:login:cloud",
		"ecr:login:cloud": "aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin %AWS_ACCOUNT%.dkr.ecr.eu-west-1.amazonaws.com",
		"ecr:push": "docker push %AWS_ACCOUNT%.dkr.ecr.eu-west-1.amazonaws.com/gylfie/api:latest"
	},
	"dependencies": {
		"@aws-sdk/client-cognito-identity-provider": "^3.163.0",
		"@aws-sdk/client-lambda": "^3.162.0",
		"@aws-sdk/client-ses": "^3.159.0",
		"@aws-sdk/client-sns": "^3.162.0",
		"@aws-sdk/credential-providers": "^3.159.0",
		"@gylfie/backend": "^0.0.13",
		"@gylfie/common": "^0.0.13",
		"@gylfie/core": "^0.0.13",
		"@nestjs/common": "^9.0.11",
		"@nestjs/config": "^2.2.0",
		"@nestjs/core": "^9.0.11",
		"@nestjs/jwt": "^9.0.0",
		"@nestjs/passport": "^9.0.0",
		"@nestjs/platform-express": "^9.0.11",
		"@prisma/client": "^4.2.1",
		"@vendia/serverless-express": "^4.10.1",
		"africastalking": "^0.5.5",
		"class-transformer": "^0.5.1",
		"class-validator": "^0.13.2",
		"cookie-parser": "^1.4.6",
		"dotenv": "^16.0.1",
		"elarian": "^0.2.25",
		"express": "^4.18.1",
		"fuse.js": "^6.6.2",
		"jose": "^4.9.1",
		"jsonwebtoken": "^8.5.1",
		"lodash": "^4.17.21",
		"luxon": "^3.0.3",
		"micromatch": "^4.0.5",
		"mime-types": "^2.1.35",
		"nodemailer": "^6.7.8",
		"nodemailer-ses-transport": "^1.5.1",
		"passport": "^0.6.0",
		"passport-jwt": "^4.0.0",
		"passport-local": "^1.0.0",
		"pdfkit": "^0.13.0",
		"prisma": "^4.2.1",
		"reflect-metadata": "^0.1.13",
		"rxjs": "^7.5.6",
		"uuid": "^8.3.2",
		"validator": "^13.7.0"
	},
	"devDependencies": {
		"@nestjs/cli": "^9.1.1",
		"@nestjs/schematics": "^9.0.1",
		"@nestjs/testing": "^9.0.11",
		"@rollup/plugin-commonjs": "^22.0.2",
		"@rollup/plugin-json": "^4.1.0",
		"@rollup/plugin-node-resolve": "^13.3.0",
		"@types/aws-lambda": "^8.10.102",
		"@types/cookie-parser": "^1.4.3",
		"@types/express": "^4.17.13",
		"@types/glob": "^8.0.0",
		"@types/jest": "^28.1.8",
		"@types/lodash": "^4.14.184",
		"@types/luxon": "^3.0.0",
		"@types/micromatch": "^4.0.2",
		"@types/mime-types": "^2.1.1",
		"@types/node": "^18.7.13",
		"@types/nodemailer": "^6.4.5",
		"@types/nodemailer-ses-transport": "^1.5.2",
		"@types/passport-jwt": "^3.0.6",
		"@types/passport-local": "^1.0.34",
		"@types/pdfkit": "^0.12.6",
		"@types/supertest": "^2.0.12",
		"@types/uuid": "^8.3.4",
		"@types/validator": "^13.7.6",
		"@typescript-eslint/eslint-plugin": "^5.35.1",
		"@typescript-eslint/parser": "^5.35.1",
		"@vercel/ncc": "^0.34.0",
		"aws-lambda": "^1.0.7",
		"awsudo": "1.7.3",
		"clean-webpack-plugin": "^4.0.0",
		"cognito-local": "^3.21.1",
		"cross-env": "^7.0.3",
		"dotenv-cli": "^6.0.0",
		"eslint": "^8.23.0",
		"eslint-config-prettier": "^8.5.0",
		"eslint-plugin-prettier": "^4.2.1",
		"glob": "^8.0.3",
		"glob-run": "^0.1.7",
		"jest": "^29.0.1",
		"nodemon": "^2.0.19",
		"prettier": "^2.7.1",
		"prettier-plugin-organize-imports": "^3.1.0",
		"rimraf": "^3.0.2",
		"rollup-plugin-terser": "^7.0.2",
		"serverless-offline": "^9.3.0",
		"supertest": "^6.2.4",
		"ts-jest": "^28.0.8",
		"ts-loader": "^9.3.1",
		"ts-node": "^10.9.1",
		"tsconfig-paths": "^4.1.0",
		"tsconfig-paths-webpack-plugin": "^4.0.0",
		"tslib": "^2.4.0",
		"typescript": "^4.8.2",
		"webpack": "^5.74.0",
		"webpack-cli": "^4.10.0"
	},
	"jest": {
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"rootDir": "src",
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": "ts-jest"
		},
		"collectCoverageFrom": [
			"**/*.(t|j)s"
		],
		"coverageDirectory": "../coverage",
		"testEnvironment": "node"
	}
}
